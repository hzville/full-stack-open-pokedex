name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/npm-install
      - name: run eslint
        run: npm run eslint
      - name: Discord failure notification
        if: ${{ false }} #Skip step temporarily to avoid spamming discord
        #if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            ðŸ”´ Eslint failed ðŸ”´
            Commit: ${{ github.sha }}

  unit-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/npm-install
      - name: run test
        run: npm run test
      - name: Discord failure notification
        if: ${{ false }} #Skip step temporarily to avoid spamming discord
        #if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            ðŸ”´ Unit tests failed ðŸ”´
            Commit: ${{ github.sha }}

  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/npm-install
      - name: build application
        run: npm run build
      - name: Discord failure notification
        if: ${{ false }} #Skip step temporarily to avoid spamming discord
        #if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            ðŸ”´ Build failed ðŸ”´
            Commit: ${{ github.sha }}

  playwright-e2e-tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/npm-install
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Discord failure notification
        if: ${{ false }} #Skip step temporarily to avoid spamming discord
        #if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            ðŸ”´ E2E tests failed ðŸ”´
            Commit: ${{ github.sha }}

  deploy:
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message),'#skip')}}
    needs:
      - lint
      - unit-test
      - build
      - playwright-e2e-tests
    steps:
      - name: Trigger deployment
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: curl "$deploy_url"
      - name: Discord success notification
        if: ${{ false }} #Skip step temporarily to avoid spamming discord
        #if: ${{ success() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: ðŸŸ¢ New version was deployed successfully! ðŸŸ¢
      - name: Discord failure notification
        if: ${{ false }} #Skip step temporarily to avoid spamming discord
        #if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            ðŸ”´ Failed to deploy new version ðŸ”´
            Commit: ${{ github.sha }}

  update-version:
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message),'#skip')}}
    needs: [deploy]
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
